# Example service, copy-paste to create new servicees.
# Don't forget to change the service name!

service: ${file(../../package.json):name}-example-appsync

custom:
  environment:
    default_env: &default_env
      SERVICE: ${self:service}
    dev:
      <<: *default_env
      STAGE: dev
    prod:
      <<: *default_env
      STAGE: prod

  output:
    handler: ../../scripts/stackOutput.handler

  prune:
    automatic: true
    number: 3

  parcel:
    bundleNodeModules: true

  amplify:
    - filename: ../../frontend/src/amplify/aws-exports.js
      type: javascript
      
  appSync:
    name: appsync-${self:provider.stage}
    authenticationType: API_KEY
    # additionalAuthenticationProviders:
    #   - authenticationType: AWS_IAM
    serviceRole: AppSyncServiceRole
    dataSources:
      - type: AWS_LAMBDA
        name: GraphqlLambda
        config:
          functionName: GraphQLResolver
      - type: NONE
        name: None
    mappingTemplatesLocation: src
    mappingTemplates:
      - dataSource: GraphqlLambda
      type: Query
      field: ExampleQuery
      request: defaultLambda.request.vtl
      response: defaultItem.response.vtl


plugins:
  - serverless-plugin-parcel
  - serverless-prune-plugin
  - serverless-appsync-plugin
  - aws-amplify-serverless-plugin
  - "@anttiviljami/serverless-stack-output"

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  memory: 512
  logRetentionInDays: 30
  environment: ${self:custom.environment.${self:provider.stage}}

functions:
  GraphQLResolver:
    handler: src/index.handler
